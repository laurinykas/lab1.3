# -*- coding: utf-8 -*-
"""LLM 1.2.2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZSkfpphGeXOh6UZJrEqY3l78zBqm2c90
"""
import google.generativeai as genai
import matplotlib.pyplot as plt
import numpy as np
from google.colab import userdata

genai.configure(api_key=userdata.get('GOOGLE_API_KEY'))

def clean_response(response_text):
    """Remove any unwanted text and keep only numbers, commas, dots, and hyphens."""
    allowed_chars = {'.', ','}
    cleaned_text = ""
    for c in response_text:
        if c.isdigit() or c in allowed_chars:
            cleaned_text += c
    #print(type(c))
    return cleaned_text

def parse_numbers(cleaned_text):
    """Convert the cleaned comma-separated numbers into a list of floats."""
    numbers = []
    for num in cleaned_text.split(','):
        if num:
            numbers.append(float(num))
    return numbers

prompt = "Generate 1000 random numbers uniformly distributed between 0 and 1. Return them as a single line of numbers separated by commas, without writing any code, give full 1000."
model = genai.GenerativeModel("gemini-2.0-flash")
response = model.generate_content(prompt)
#print(response.text)
cleaned_text = clean_response(response.text)

random_numbers =parse_numbers(cleaned_text)
if len(random_numbers) < 1000:
    raise ValueError(f"API returned only {len(random_numbers)} numbers. Expected 1000.")
random_numbers = random_numbers[:1000]

plt.hist(random_numbers, bins=100, edgecolor='black', alpha=0.8)
plt.title("Uniform Distribution of 1000 Random Numbers")
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.grid(True)
